/* 
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DetailedGear
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DetailedGearTests
    {
        // TODO uncomment below to declare an instance variable for DetailedGear
        //private DetailedGear instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DetailedGear
            //instance = new DetailedGear();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DetailedGear
        /// </summary>
        [Test]
        public void DetailedGearInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DetailedGear
            //Assert.IsInstanceOfType<DetailedGear> (instance, "variable 'instance' is a DetailedGear");
        }


        /// <summary>
        /// Test the property 'BrandName'
        /// </summary>
        [Test]
        public void BrandNameTest()
        {
            // TODO unit test for the property 'BrandName'
        }
        /// <summary>
        /// Test the property 'ModelName'
        /// </summary>
        [Test]
        public void ModelNameTest()
        {
            // TODO unit test for the property 'ModelName'
        }
        /// <summary>
        /// Test the property 'FrameType'
        /// </summary>
        [Test]
        public void FrameTypeTest()
        {
            // TODO unit test for the property 'FrameType'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

    }

}
