/* 
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DetailedSegmentEffort
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DetailedSegmentEffortTests
    {
        // TODO uncomment below to declare an instance variable for DetailedSegmentEffort
        //private DetailedSegmentEffort instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DetailedSegmentEffort
            //instance = new DetailedSegmentEffort();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DetailedSegmentEffort
        /// </summary>
        [Test]
        public void DetailedSegmentEffortInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DetailedSegmentEffort
            //Assert.IsInstanceOfType<DetailedSegmentEffort> (instance, "variable 'instance' is a DetailedSegmentEffort");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Activity'
        /// </summary>
        [Test]
        public void ActivityTest()
        {
            // TODO unit test for the property 'Activity'
        }
        /// <summary>
        /// Test the property 'Athlete'
        /// </summary>
        [Test]
        public void AthleteTest()
        {
            // TODO unit test for the property 'Athlete'
        }
        /// <summary>
        /// Test the property 'MovingTime'
        /// </summary>
        [Test]
        public void MovingTimeTest()
        {
            // TODO unit test for the property 'MovingTime'
        }
        /// <summary>
        /// Test the property 'StartIndex'
        /// </summary>
        [Test]
        public void StartIndexTest()
        {
            // TODO unit test for the property 'StartIndex'
        }
        /// <summary>
        /// Test the property 'EndIndex'
        /// </summary>
        [Test]
        public void EndIndexTest()
        {
            // TODO unit test for the property 'EndIndex'
        }
        /// <summary>
        /// Test the property 'AverageCadence'
        /// </summary>
        [Test]
        public void AverageCadenceTest()
        {
            // TODO unit test for the property 'AverageCadence'
        }
        /// <summary>
        /// Test the property 'AverageWatts'
        /// </summary>
        [Test]
        public void AverageWattsTest()
        {
            // TODO unit test for the property 'AverageWatts'
        }
        /// <summary>
        /// Test the property 'DeviceWatts'
        /// </summary>
        [Test]
        public void DeviceWattsTest()
        {
            // TODO unit test for the property 'DeviceWatts'
        }
        /// <summary>
        /// Test the property 'AverageHeartrate'
        /// </summary>
        [Test]
        public void AverageHeartrateTest()
        {
            // TODO unit test for the property 'AverageHeartrate'
        }
        /// <summary>
        /// Test the property 'MaxHeartrate'
        /// </summary>
        [Test]
        public void MaxHeartrateTest()
        {
            // TODO unit test for the property 'MaxHeartrate'
        }
        /// <summary>
        /// Test the property 'Segment'
        /// </summary>
        [Test]
        public void SegmentTest()
        {
            // TODO unit test for the property 'Segment'
        }
        /// <summary>
        /// Test the property 'KomRank'
        /// </summary>
        [Test]
        public void KomRankTest()
        {
            // TODO unit test for the property 'KomRank'
        }
        /// <summary>
        /// Test the property 'PrRank'
        /// </summary>
        [Test]
        public void PrRankTest()
        {
            // TODO unit test for the property 'PrRank'
        }
        /// <summary>
        /// Test the property 'Hidden'
        /// </summary>
        [Test]
        public void HiddenTest()
        {
            // TODO unit test for the property 'Hidden'
        }

    }

}
